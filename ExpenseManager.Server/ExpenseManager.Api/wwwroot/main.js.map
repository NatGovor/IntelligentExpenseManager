{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/common-services/auth.service.ts","webpack:///./src/app/common-services/helpers.service.ts","webpack:///./src/app/secure-app/debts/debts.component.css","webpack:///./src/app/secure-app/debts/debts.component.html","webpack:///./src/app/secure-app/debts/debts.component.ts","webpack:///./src/app/secure-app/expenses/expenses.component.css","webpack:///./src/app/secure-app/expenses/expenses.component.html","webpack:///./src/app/secure-app/expenses/expenses.component.ts","webpack:///./src/app/secure-app/modals/modal-content.ts","webpack:///./src/app/secure-app/models/day-expenses.ts","webpack:///./src/app/secure-app/models/expense.ts","webpack:///./src/app/secure-app/new-expense/new-expense.component.css","webpack:///./src/app/secure-app/new-expense/new-expense.component.html","webpack:///./src/app/secure-app/new-expense/new-expense.component.ts","webpack:///./src/app/secure-app/pipes/make-positive.pipe.ts","webpack:///./src/app/secure-app/reports/reports.component.css","webpack:///./src/app/secure-app/reports/reports.component.html","webpack:///./src/app/secure-app/reports/reports.component.ts","webpack:///./src/app/secure-app/secure-app-routing.module.ts","webpack:///./src/app/secure-app/secure-app.component.css","webpack:///./src/app/secure-app/secure-app.component.html","webpack:///./src/app/secure-app/secure-app.component.ts","webpack:///./src/app/secure-app/secure-app.module.ts","webpack:///./src/app/secure-app/services/balance.service.ts","webpack:///./src/app/secure-app/services/expense.service.ts","webpack:///./src/app/secure-app/services/shared-expense.service.ts","webpack:///./src/app/secure-app/shared-expenses/shared-expenses.component.css","webpack:///./src/app/secure-app/shared-expenses/shared-expenses.component.html","webpack:///./src/app/secure-app/shared-expenses/shared-expenses.component.ts","webpack:///./src/app/unsecure-app/login/login.component.html","webpack:///./src/app/unsecure-app/login/login.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LoginComponent } from './unsecure-app/login/login.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"/* AppComponent's private CSS styles */\\r\\nh1 {\\r\\n    font-size: 1.2em;\\r\\n    color: #999;\\r\\n    margin-bottom: 0;\\r\\n}\\r\\nh2 {\\r\\n    font-size: 2em;\\r\\n    margin-top: 0;\\r\\n    padding-top: 0;\\r\\n}\\r\\n\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './unsecure-app/login/login.component';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { SecureAppModule } from './secure-app/secure-app.module';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    NgbModule.forRoot(),\n    AppRoutingModule,\n    SecureAppModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { User } from '../secure-app/models/user';\r\nimport { AuthResult } from '../unsecure-app/models/auth-result';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private authUrl = 'api/auth'; // URL to web api\r\n\r\n  constructor(\r\n    private http: HttpClient) { }\r\n\r\n  login(email: string, password: string): Observable<AuthResult> {\r\n    return this.http.post<Object>(this.authUrl, { 'email': email, 'password': password }, httpOptions).pipe(\r\n      tap((result: AuthResult) => this.log(`authenticate user`)),\r\n      catchError(this.handleError<AuthResult>('authenticate user'))\r\n    );\r\n  }\r\n\r\n  private log(message: string) {\r\n    console.log('AuthService: ' + message);\r\n  }\r\n\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      this.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HelpersService {\r\n  getStorageProperty(name): Object {\r\n    if (localStorage.getItem(name) != null) {\r\n      const value = localStorage.getItem(name);\r\n\r\n      if (value[0] === '{' || value[0] === '[') {\r\n          return JSON.parse(value);\r\n      }\r\n\r\n      return value;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  setStorageProperty(name, value): void {\r\n    if (value === null) {\r\n        localStorage.removeItem(name);\r\n    } else {\r\n        localStorage.setItem(name, typeof (value) === 'string' ? value : JSON.stringify(value));\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\n  debts works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-debts',\n  templateUrl: './debts.component.html',\n  styleUrls: ['./debts.component.css']\n})\nexport class DebtsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <ul *ngIf=\\\"dayExpenses\\\" class=\\\"items-list\\\">\\n      <li *ngFor=\\\"let day of dayExpenses; let i = index\\\">\\n        <div>\\n          {{day.date | date}}\\n          <div *ngFor=\\\"let expense of day.expenses\\\">\\n            {{expense.description}} {{expense.amount | currency:'GBP':'symbol':'1.2-2'}}\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"deleteExpense(expense, i)\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n          </div>\\n        </div>\\n      </li>\\n    </ul>\\n</div>\\n<div class=\\\"circle-btn-wrapper\\\">\\n    <div class=\\\"circle-btn\\\" (click)=\\\"gotoNewExpense()\\\">+</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ExpenseService } from '../services/expense.service';\nimport { DayExpenses } from '../models/day-expenses';\nimport { Expense } from '../models/expense';\n\n@Component({\n  selector: 'app-expenses',\n  templateUrl: './expenses.component.html',\n  styleUrls: ['./expenses.component.css'],\n  styles: ['.close { float: none; }']\n})\nexport class ExpensesComponent implements OnInit {\n  dayExpenses: DayExpenses[];\n\n  constructor(\n    private expenseService: ExpenseService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.getExpenses();\n  }\n\n  getExpenses(): void {\n    this.expenseService.getExpenses()\n      .subscribe(dayExpenses => {\n        this.dayExpenses = dayExpenses;\n      });\n  }\n\n  gotoNewExpense() {\n    this.router.navigate(['/user/new-expense']);\n  }\n\n  deleteExpense(expense: Expense, index: number) {\n    this.dayExpenses[index].expenses = this.dayExpenses[index].expenses.filter(e => e !== expense);\n    if (this.dayExpenses[index].expenses.length == 0) {\n      this.dayExpenses.splice(index,1);\n    }\n    this.expenseService.deleteExpense(expense.id).subscribe();\n  }\n\n}\n","import { Component, Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'ngbd-modal-content',\r\n  template: `\r\n    <div class=\"modal-header\">\r\n      <h4 class=\"modal-title\" [ngClass]=\"headerClassName\">{{title}}</h4>\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      {{text}}\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn\" (click)=\"activeModal.close('Cross click')\">Ok, thanks</button>\r\n    </div>\r\n  `\r\n})\r\nexport class NgbdModalContent {\r\n  @Input() title;\r\n  @Input() text;\r\n  @Input() headerClassName;\r\n\r\n  constructor(public activeModal: NgbActiveModal) {}\r\n}","import { Expense } from \"./expense\";\r\n\r\nexport class DayExpenses {\r\n  date: Date;\r\n  expenses: Expense[];\r\n}\r\n","export class Expense {\r\n  id: string;\r\n  userId: string;\r\n  date: Date;\r\n  amount: number;\r\n  description: string;\r\n  isShared: boolean;\r\n  sharedExpenseId: string;\r\n}\r\n","module.exports = \"\"","module.exports = \"<form (ngSubmit)=\\\"onSubmit()\\\" #expenseForm=\\\"ngForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"description\\\">Description</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\"\\n      required\\n      [(ngModel)]=\\\"model.description\\\" name=\\\"description\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <label for=\\\"amount\\\">Amount (£)</label>\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"amount\\\"\\n        required\\n        [(ngModel)]=\\\"model.amount\\\" name=\\\"amount\\\"/>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <label for=\\\"date\\\">Date</label>\\n      <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"date\\\"\\n        required\\n        [(ngModel)]=\\\"model.date\\\" name=\\\"date\\\"/>\\n  </div>\\n  <button type=\\\"submit\\\"\\n    class=\\\"btn btn-default\\\"\\n    [disabled]=\\\"!expenseForm.form.valid\\\">\\n    Submit\\n  </button>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\n\nimport { Expense } from '../models/expense';\nimport { ExpenseService } from '../services/expense.service';\nimport { BalanceService } from '../services/balance.service';\nimport { HelpersService } from '../../common-services/helpers.service';\nimport { User } from '../models/user';\n\n@Component({\n  selector: 'app-new-expense',\n  templateUrl: './new-expense.component.html',\n  styleUrls: ['./new-expense.component.css']\n})\nexport class NewExpenseComponent implements OnInit {\n  model = new Expense();\n\n  constructor(\n    private expenseService: ExpenseService,\n    private balanceService: BalanceService,\n    private helpersService: HelpersService,\n    private location: Location\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(): void {\n    let user = this.helpersService.getStorageProperty(\"user\") as User;\n    this.model.userId = user.id;\n    this.expenseService.addExpense(this.model)\n      .subscribe(expense => {\n        this.balanceService.checkBalance(this.model.date)\n          .subscribe(result => {\n            console.log(result);\n            // if expense belongs to current month => update state of the app\n            let currentDate = new Date();\n            let expenseDate = new Date(this.model.date);\n            if (currentDate.getMonth() == expenseDate.getMonth()) {\n              this.balanceService.updateBalance(result);\n            }\n            this.location.back();\n          });\n      });\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'makePositive'})\r\nexport class MakePositivePipe implements PipeTransform {\r\n  transform(value: number): number {\r\n    return Math.abs(value);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\n  reports works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reports',\n  templateUrl: './reports.component.html',\n  styleUrls: ['./reports.component.css']\n})\nexport class ReportsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { SecureAppComponent } from './secure-app.component';\r\nimport { ExpensesComponent } from './expenses/expenses.component';\r\nimport { SharedExpensesComponent } from './shared-expenses/shared-expenses.component';\r\nimport { DebtsComponent } from './debts/debts.component';\r\nimport { ReportsComponent } from './reports/reports.component';\r\nimport { NewExpenseComponent } from './new-expense/new-expense.component';\r\n\r\nconst secureAppRoutes: Routes = [\r\n    {\r\n      path: 'user',\r\n      component: SecureAppComponent,\r\n      children: [\r\n        {\r\n          path: '',\r\n          children: [\r\n            { path: 'expenses', component: ExpensesComponent },\r\n            { path: 'shared-expenses', component: SharedExpensesComponent },\r\n            { path: 'debts', component: DebtsComponent },\r\n            { path: 'reports', component: ReportsComponent },\r\n            { path: 'new-expense', component: NewExpenseComponent }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(secureAppRoutes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class SecureAppRoutingModule {}\r\n","module.exports = \".custom-nav {\\r\\n  background-color: #5bc5a7;\\r\\n  color: #fff;\\r\\n  box-shadow: 0px 3px 4px 0px rgba(0, 0, 0, 0.3);\\r\\n}\\r\\n\\r\\n.custom-nav .vertical-align {\\r\\n  line-height: 45px;\\r\\n}\\r\\n\\r\\n.nav-link {\\r\\n  padding: 0.2rem 0.4rem;\\r\\n  max-width: 105px;\\r\\n  text-align: center;\\r\\n  max-height: 56px;\\r\\n  min-height: 56px;\\r\\n}\\r\\n\\r\\na.nav-link {\\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\na.nav-link.active {\\r\\n  border-bottom: 3px solid #fff;\\r\\n}\\r\\n\\r\\n.top-nav {\\r\\n  padding: 5px;\\r\\n}\\r\\n\\r\\n.top-left-nav img {\\r\\n  width: 23px;\\r\\n  float: right;\\r\\n  margin-left: 5px;\\r\\n}\\r\\n\\r\\n.popover {\\r\\n  top: 36px;\\r\\n  left: 68%;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"custom-nav\\\" [ngClass]=\\\"balanceStateClass\\\">\\r\\n    <div class=\\\"row top-nav no-margin\\\">\\r\\n      <div class=\\\"col-9 no-padding\\\">Intellginet Expense Manager</div>\\r\\n      <div class=\\\"col-3 top-left-nav no-padding\\\">\\r\\n        <img src=\\\"assets/menu.png\\\" (click)=\\\"toggleSideMenu()\\\">\\r\\n        <img src=\\\"assets/notification.png\\\"/>\\r\\n      </div>\\r\\n      <div class=\\\"popover\\\" [@heroState]=\\\"state\\\">\\r\\n          <div class=\\\"popover-body\\\">\\r\\n            <div>Profile settings</div>\\r\\n            <div>Log out</div>\\r\\n          </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <nav class=\\\"row no-margin\\\">\\r\\n      <div class=\\\"col-3 no-padding\\\">\\r\\n        <a class=\\\"nav-link active\\\" routerLink=\\\"/user/expenses\\\" routerLinkActive=\\\"active\\\">All expenses</a>\\r\\n      </div>\\r\\n      <div class=\\\"col-3 no-padding\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/user/shared-expenses\\\" routerLinkActive=\\\"active\\\">Shared expenses</a>\\r\\n      </div>\\r\\n      <div class=\\\"col-3 no-padding vertical-align\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/user/debts\\\" routerLinkActive=\\\"active\\\">Debts</a>\\r\\n      </div>\\r\\n      <div class=\\\"col-3 no-padding vertical-align\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/user/reports\\\" routerLinkActive=\\\"active\\\">Reports</a>\\r\\n      </div>\\r\\n    </nav>\\r\\n</div>\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Profile update</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <form>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"dateOfBirth\\\">Date of birth</label>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-black\\\" (click)=\\\"c('Save click')\\\">Save</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { trigger, state, style, animate, transition } from '@angular/animations';\r\nimport { Subscription } from 'rxjs';\r\nimport { BalanceService } from './services/balance.service';\r\nimport { HelpersService } from '../common-services/helpers.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbdModalContent } from './modals/modal-content';\r\n\r\n@Component({\r\n  templateUrl: './secure-app.component.html',\r\n  styleUrls: ['./secure-app.component.css'],\r\n  animations: [\r\n    trigger('heroState', [\r\n      state('inactive', style({\r\n        transform: 'translateY(-200%)'\r\n      })),\r\n      state('active', style({\r\n        transform: 'translateY(0%)'\r\n      })),\r\n      transition('inactive => active', animate('400ms ease-in')),\r\n      transition('active => inactive', animate('400ms ease-out'))\r\n    ])\r\n  ]\r\n})\r\nexport class SecureAppComponent implements OnInit, OnDestroy {\r\n  balanceStateClass = '';\r\n  subscription: Subscription;\r\n  state = \"inactive\";\r\n\r\n  warningTitle = \"Warning!\";\r\n  warningText = \"You are getting closer to your limit! Reduce your expenses if \" +\r\n    \"you do not want to overspend this month.\";\r\n  congratulationTitle = \"Congratulations!\";\r\n  congratulationText = \"Congratulations! You have controlled your \" +\r\n    \"expenses carefully and now you are going to meet the set budget by the end of the month\";\r\n\r\n  constructor(\r\n    private balanceService: BalanceService,\r\n    private helpersService: HelpersService,\r\n    private modalService: NgbModal\r\n  ) {\r\n    this.subscription = balanceService.balanceUpdated$.subscribe(\r\n      state => {\r\n        this.getBalanceStateClass(state);\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    let prevBalanceStatus = this.helpersService.getStorageProperty(\"balanceStatus\");\r\n    if (prevBalanceStatus === \"false\") {\r\n      this.balanceStateClass = \"negative-state\";\r\n    }\r\n\r\n    let currentDate = new Date();\r\n    this.balanceService.checkBalance(`${currentDate.getFullYear()}-${currentDate.getMonth() + 1}-${currentDate.getDate()}`)\r\n      .subscribe(result => {\r\n        console.log(result);\r\n        this.getBalanceStateClass(result);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  getBalanceStateClass(currentBalanceState: boolean) {\r\n    if (currentBalanceState) {\r\n      this.balanceStateClass = 'positive-state';\r\n    } else {\r\n      this.balanceStateClass = 'negative-state';\r\n    }\r\n\r\n    let balanceStatus = this.helpersService.getStorageProperty(\"balanceStatus\");\r\n    if (balanceStatus === null) {\r\n      if (!currentBalanceState) {\r\n        this.showPopup(this.warningTitle, this.warningText, 'negative');\r\n        this.helpersService.setStorageProperty(\"balanceStatus\", currentBalanceState);\r\n      }\r\n    } else {\r\n      balanceStatus = balanceStatus === \"true\"; // convert to boolean\r\n      if (balanceStatus !== currentBalanceState) {\r\n        this.showPopup(this.congratulationTitle, this.congratulationText, 'positive');\r\n        this.helpersService.setStorageProperty(\"balanceStatus\", null);\r\n      }\r\n    }\r\n  }\r\n\r\n  showPopup(title, text, headerClassName) {\r\n    const modalRef = this.modalService.open(NgbdModalContent);\r\n    modalRef.componentInstance.title = title;\r\n    modalRef.componentInstance.text = text;\r\n    modalRef.componentInstance.headerClassName = headerClassName;\r\n  }\r\n\r\n  toggleSideMenu() {\r\n    this.state = this.state  === \"active\" ? \"inactive\" : \"active\";\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { NgbdModalContent } from './modals/modal-content';\r\n\r\nimport { ExpensesComponent } from './expenses/expenses.component';\r\nimport { SecureAppComponent } from './secure-app.component';\r\n\r\nimport { SecureAppRoutingModule } from './secure-app-routing.module';\r\nimport { SharedExpensesComponent } from './shared-expenses/shared-expenses.component';\r\nimport { DebtsComponent } from './debts/debts.component';\r\nimport { ReportsComponent } from './reports/reports.component';\r\nimport { MakePositivePipe } from './pipes/make-positive.pipe';\r\nimport { NewExpenseComponent } from './new-expense/new-expense.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    SecureAppRoutingModule\r\n  ],\r\n  providers: [],\r\n  declarations: [\r\n    SecureAppComponent,\r\n    ExpensesComponent,\r\n    SharedExpensesComponent,\r\n    DebtsComponent,\r\n    ReportsComponent,\r\n    MakePositivePipe,\r\n    NewExpenseComponent,\r\n    NgbdModalContent\r\n  ],\r\n  entryComponents: [\r\n    NgbdModalContent\r\n  ]\r\n})\r\nexport class SecureAppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { HelpersService } from '../../common-services/helpers.service';\r\nimport { User } from '../models/user';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BalanceService {\r\n  private balanceUpdatedSource = new Subject<boolean>();\r\n  balanceUpdated$ = this.balanceUpdatedSource.asObservable();\r\n\r\n  private balancesUrl = 'api/balances'; // URL to web api\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private helpersService: HelpersService\r\n  ) { }\r\n\r\n  updateBalance(state: boolean) {\r\n    this.balanceUpdatedSource.next(state);\r\n  }\r\n\r\n  checkBalance(date): Observable<boolean> {\r\n    let user = this.helpersService.getStorageProperty(\"user\") as User;\r\n    const url = `${this.balancesUrl}/${user.id}/${date}`;\r\n    return this.http.get<boolean>(url)\r\n      .pipe(\r\n        tap(result => {\r\n          this.log(`fetched balance`)\r\n        }),\r\n        catchError(this.handleError<any>('checkExpenses'))\r\n      );\r\n  }\r\n\r\n  private log(message: string) {\r\n    console.log('ExpenseService: ' + message);\r\n  }\r\n\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      this.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { Expense } from '../models/expense';\r\nimport { DayExpenses } from '../models/day-expenses';\r\nimport { HelpersService } from '../../common-services/helpers.service';\r\nimport { User } from '../models/user';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExpenseService {\r\n  private expensesUrl = 'api/expenses'; // URL to web api\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private helpersService: HelpersService\r\n  ) { }\r\n\r\n  getExpenses(): Observable<DayExpenses[]> {\r\n    let user = this.helpersService.getStorageProperty(\"user\") as User;\r\n    const url = `${this.expensesUrl}/user/${user.id}`;\r\n    return this.http.get<Object>(url)\r\n      .pipe(\r\n        map(expenses => {\r\n          let dayExpenses = [];\r\n          for (var key in expenses) {\r\n            let dayExpense = new DayExpenses();\r\n            dayExpense.date = new Date(key);\r\n            dayExpense.expenses = expenses[key];\r\n            dayExpenses.push(dayExpense);\r\n          }\r\n          return dayExpenses;\r\n        }),\r\n        tap(expenses => {\r\n          this.log(`fetched expenses`)\r\n        }),\r\n        catchError(this.handleError('getExpenses',[]))\r\n      );\r\n  }\r\n\r\n  addExpense(expense: Expense): Observable<Expense> {\r\n    return this.http.post<Expense>(this.expensesUrl, expense, httpOptions).pipe(\r\n      tap((expense: Expense) => this.log(`added expense w/ id=${expense.id}`)),\r\n      catchError(this.handleError<Expense>('addExpense'))\r\n    );\r\n  }\r\n\r\n  deleteExpense(id: string): Observable<Object> {\r\n    const url = `${this.expensesUrl}/${id}`;\r\n\r\n    return this.http.delete<null>(url, httpOptions).pipe(\r\n      tap(_ => this.log(`deleted expense id=${id}`)),\r\n      catchError(this.handleError<any>('deleteExpense'))\r\n    );\r\n  }\r\n\r\n  private log(message: string) {\r\n    console.log('ExpenseService: ' + message);\r\n  }\r\n\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      this.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { SharedExpense } from '../models/shared-expense';\r\nimport { User } from '../models/user';\r\nimport { HelpersService } from '../../common-services/helpers.service';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SharedExpenseService {\r\n  private expensesUrl = 'api/sharedexpenses'; // URL to web api\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private helpersService: HelpersService\r\n  ) { }\r\n\r\n  getSharedExpenses(): Observable<SharedExpense[]> {\r\n    let user = this.helpersService.getStorageProperty(\"user\") as User;\r\n    const url = `${this.expensesUrl}/${user.id}`;\r\n    return this.http.get<SharedExpense[]>(url)\r\n      .pipe(\r\n        tap(expenses => this.log(`fetched sharedExpenses`)),\r\n        catchError(this.handleError('getSharedExpenses',[]))\r\n      );\r\n  }\r\n\r\n  private log(message: string) {\r\n    console.log('SharedExpenseService: ' + message);\r\n  }\r\n\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      this.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <ul class=\\\"items-list\\\">\\n      <li *ngFor=\\\"let expense of sharedExpenses\\\">\\n        <div>{{expense.date | date}}</div>\\n        <div>{{expense.description}}</div>\\n        <div>{{getPayerName(expense)}} paid {{expense.totalAmount | currency:'GBP':'symbol':'1.2-2'}}</div>\\n        <div [ngClass]=\\\"addClass(expense)\\\">\\n          {{getDebtText(expense)}} {{expense.userDebt | makePositive | currency:'GBP':'symbol':'1.2-2'}}\\n        </div>\\n      </li>\\n    </ul>\\n</div>\\n<div class=\\\"circle-btn-wrapper\\\">\\n  <div class=\\\"circle-btn\\\" (click)=\\\"gotoNewExpense()\\\">+</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { SharedExpense } from '../models/shared-expense';\nimport { SharedExpenseService } from '../services/shared-expense.service';\n\n@Component({\n  selector: 'app-shared-expenses',\n  templateUrl: './shared-expenses.component.html',\n  styleUrls: ['./shared-expenses.component.css']\n})\nexport class SharedExpensesComponent implements OnInit {\n  sharedExpenses: SharedExpense[];\n\n  constructor(\n    private sharedExpenseService: SharedExpenseService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.getSharedExpenses();\n  }\n\n  getSharedExpenses(): void {\n    this.sharedExpenseService.getSharedExpenses()\n      .subscribe(sharedExpenses => {\n        this.sharedExpenses = sharedExpenses;\n      });\n  }\n\n  getPayerName(expense: SharedExpense): string {\n    if (expense.userId === expense.payerId) {\n      return 'you';\n    } else {\n      return expense.payerName;\n    }\n  }\n\n  getDebtText(expense: SharedExpense): string {\n    if (expense.userDebt < 0) {\n      return \"you borrowed\";\n    } else {\n      return \"you lent\";\n    }\n  }\n\n  addClass(expense: SharedExpense): string {\n    if (expense.userId === expense.payerId) {\n        return 'positive';\n    } else {\n        return 'negative';\n    }\n  }\n\n  gotoNewExpense() {\n    this.router.navigate(['/user/new-expense']);\n  }\n\n}\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <p>Enter Credentials to login:</p>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Email: </label>\\r\\n      <input [(ngModel)]=\\\"email\\\" type=\\\"text\\\" class=\\\"form-control\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Password: </label>\\r\\n      <input [(ngModel)]=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <button (click)=\\\"login()\\\" type=\\\"submit\\\">Login</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../common-services/auth.service';\r\nimport { HelpersService } from '../../common-services/helpers.service';\r\nimport { User } from '../../secure-app/models/user';\r\n\r\n@Component({\r\n  templateUrl: './login.component.html'\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  email: string;\r\n  password: string;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private helpersService: HelpersService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    let user = this.helpersService.getStorageProperty(\"user\") as User;\r\n    if (user) {\r\n      this.router.navigate(['/user/expenses']);\r\n    }\r\n  }\r\n\r\n  login(): void {\r\n    if (this.email && this.password) {\r\n      this.authService.login(this.email, this.password)\r\n        .subscribe(result => {\r\n          if (result.isSuccess) {\r\n            this.helpersService.setStorageProperty(\"user\", result.user);\r\n            this.router.navigate(['/user/expenses']);\r\n          } else {\r\n            alert('Invalid login or password');\r\n          }\r\n        });\r\n    }\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from 'app/app.module';\nimport { environment } from 'environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}